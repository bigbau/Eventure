Phase: usedForRelation
Input: Token Lookup Location StoryLoc UsedForInd Object
Options: control = all

Rule: UsedForRelation1
(

({Token.category == NN} | {Token.category == NNP} | {Token.category == NNPS} | {Token.category == NNS} | {Token.category == NP} | {Token.category == NPS}):entity1
({UsedForInd, Token.string != "requires", Token.string != "require", Token.string != "required", Token.string != "with"}):usedforind
({Token.string != ".", Token.string != ",", Token.string != "?", Token.string != "!"})*
({Token.category == NN} | {Token.category == NNP} | {Token.category == NNPS} | {Token.category == NNS} | {Token.category == NP} | {Token.category == NPS} | {Token.category == VBG}):entity2

):UsedForRelation1
-->
:UsedForRelation1
  {
    gate.AnnotationSet matchedEntities=(gate.AnnotationSet) bindings.get("entity1");
    Annotation entity1=matchedEntities.iterator().next();
    gate.AnnotationSet matchedEntities2=(gate.AnnotationSet) bindings.get("entity2");
    Annotation entity2=matchedEntities2.iterator().next();
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("UsedForRelation1");      
    gate.FeatureMap newFeatures= Factory.newFeatureMap();
    newFeatures.put("Entity1",entity1.getFeatures().get("string"));
    newFeatures.put("Entity2",entity2.getFeatures().get("string"));
    newFeatures.put("rule","UsedForRelation1");
    annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"UsedForRelation", newFeatures);
  }
  
Rule: UsedForRelation2
(

({Token.category == NN} | {Token.category == NNP} | {Token.category == NNPS} | {Token.category == NNS} | {Token.category == NP} | {Token.category == NPS} | {Token.category == VBG}):entity2
({Token.string == "requires"} | {Token.string == "required"} | {Token.string == "require"}):usedforind
({Token.string != ".", Token.string != ",", Token.string != "?", Token.string != "!"})*
({Token.category == NN} | {Token.category == NNP} | {Token.category == NNPS} | {Token.category == NNS} | {Token.category == NP} | {Token.category == NPS}):entity1

):UsedForRelation2
-->
:UsedForRelation2
  {
    gate.AnnotationSet matchedEntities=(gate.AnnotationSet) bindings.get("entity1");
    Annotation entity1=matchedEntities.iterator().next();
    gate.AnnotationSet matchedEntities2=(gate.AnnotationSet) bindings.get("entity2");
    Annotation entity2=matchedEntities2.iterator().next();
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("UsedForRelation2");      
    gate.FeatureMap newFeatures= Factory.newFeatureMap();
    newFeatures.put("Entity1",entity1.getFeatures().get("string"));
    newFeatures.put("Entity2",entity2.getFeatures().get("string"));
    newFeatures.put("rule","UsedForRelation2");
    annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"UsedForRelation", newFeatures);
  }
  
Rule: UsedForRelation3
(

({Token.category == VBG}):entity2
({Token.category == NN} | {Token.category == NNP} | {Token.category == NNPS} | {Token.category == NNS} | {Token.category == NP} | {Token.category == NPS}):entity1

):UsedForRelation3
-->
:UsedForRelation3
  {
    gate.AnnotationSet matchedEntities=(gate.AnnotationSet) bindings.get("entity1");
    Annotation entity1=matchedEntities.iterator().next();
    gate.AnnotationSet matchedEntities2=(gate.AnnotationSet) bindings.get("entity2");
    Annotation entity2=matchedEntities2.iterator().next();
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("UsedForRelation3");      
    gate.FeatureMap newFeatures= Factory.newFeatureMap();
    newFeatures.put("Entity1",entity1.getFeatures().get("string"));
    newFeatures.put("Entity2",entity2.getFeatures().get("string"));
    newFeatures.put("rule","UsedForRelation3");
    annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"UsedForRelation", newFeatures);
  }
  
Rule: UsedForRelation4
(

({Token.category == VBG, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.category != MD} | 
{Token.category == VBD, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.category != MD} | 
{Token.category == VB, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.category != MD} | 
{Token.category == VBN, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.category != MD} | 
{Token.category == VBP, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.category != MD} | 
{Token.category == VBZ, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.category != MD}):entity2
({Token.string != ".", Token.string != ",", Token.string != "?", Token.string != "!"})*
({Token.string == "with"}):usedforind
({Token.string != ".", Token.string != ",", Token.string != "?", Token.string != "!"})*
({Token.category == NN} | {Token.category == NNP} | {Token.category == NNPS} | {Token.category == NNS} | {Token.category == NP} | {Token.category == NPS}):entity1

):UsedForRelation4
-->
:UsedForRelation4
  {
    gate.AnnotationSet matchedEntities=(gate.AnnotationSet) bindings.get("entity1");
    Annotation entity1=matchedEntities.iterator().next();
    gate.AnnotationSet matchedEntities2=(gate.AnnotationSet) bindings.get("entity2");
    Annotation entity2=matchedEntities2.iterator().next();
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("UsedForRelation4");      
    gate.FeatureMap newFeatures= Factory.newFeatureMap();
    newFeatures.put("Entity1",entity1.getFeatures().get("string"));
    newFeatures.put("Entity2",entity2.getFeatures().get("root"));
    newFeatures.put("rule","UsedForRelation4");
    annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"UsedForRelation", newFeatures);
  }