Phase: event
Input: Token GoalInd Lookup
Options: control = appelt

Rule: Event1
(
({Token.string != "\"", !GoalInd})
(
	({Token.category == MD})[0,1]
	({Token.category == RB})[0,1]
	(
		{Token.category == VB, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.string != "'s", Token.string != "'re", Token.string != "'m", Token.string != "'ve", Token.string != "'d", Token.category != MD, !GoalInd} | 
		{Token.category == VBZ, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.string != "'s", Token.string != "'re", Token.string != "'m", Token.string != "'ve", Token.string != "'d", Token.category != MD, !GoalInd} | 
		{Token.category == VBD, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.string != "'s", Token.category != MD, Token.string != "'re", Token.string != "'m", Token.string != "'ve", Token.string != "'d", !GoalInd} |
		{Token.category == VBG, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.string != "'s", Token.category != MD, Token.string != "'re", Token.string != "'m", Token.string != "'ve", Token.string != "'d", !GoalInd} |
		{Token.category == VBP, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.string != "'s", Token.category != MD, Token.string != "'re", Token.string != "'m", Token.string != "'ve", Token.string != "'d", !GoalInd} |
		{Token.category == VBN, Token.string != "be", Token.string != "been", Token.string != "is", Token.string != "was", Token.string != "has", Token.string != "are", Token.string != "were", Token.string != "have", Token.string != "had", Token.string != "is", Token.string != "'s", Token.category != MD, Token.string != "'re", Token.string != "'m", Token.string != "'ve", Token.string != "'d", !GoalInd}
	)
	({Token.chunk != O, Token.chunk != B-VP, Token.chunk != B-SBAR})*
): entity1
):Event1
-->
:Event1
  {
    gate.AnnotationSet matchedEntities=(gate.AnnotationSet) bindings.get("entity1");	
	ArrayList tokens = new ArrayList(matchedEntities);
	Collections.sort(tokens, new OffsetComparator());
	String text = "";
	Iterator tokIter = tokens.iterator();
	while(tokIter.hasNext())
		text += (String)((Annotation)tokIter.next()).getFeatures().get("string") + " ";
		
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("entity1");      
    gate.FeatureMap newFeatures= Factory.newFeatureMap();
    newFeatures.put("Entity1",text);
    newFeatures.put("rule","Event1");
    annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"Event", newFeatures);
  }